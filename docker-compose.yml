version: "3"
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
networks:
  app:
    name: app
    driver: bridge
services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    volumes:
      - .:/usr/app
    ports:
      - 3333:3333
    restart: "on-failure"

  # ********************
  # Telemetry Components
  # ********************
  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    command:
      - "--log-level=debug"
      - "--memory.max-traces"
      - "10000"
      - "--query.base-path"
      - "/jaeger/ui"
      - "--prometheus.server-url"
      - "http://prometheus:9090"
    deploy:
      resources:
        limits:
          memory: 300M
    restart: always
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250"
      - "14268:14268" # Jaeger collector
      - "4317" # OTLP gRPC default port
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus
    # logging: *logging

  # Grafana
  grafana:
    image: grafana/grafana:9.1.0
    container_name: grafana
    volumes:
      - ./ops/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    # logging: *logging

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.74.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: always
    command:
      [
        "--config=/etc/otelcol-config.yml",
        "--config=/etc/otelcol-config-extras.yml",
      ]
    volumes:
      - ./ops/otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
      - ./ops/otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
    ports:
      - "4317" # OTLP over gRPC receiver
      - "4318:4318" # OTLP over HTTP receiver
      - "9464" # Prometheus exporter
      - "8888" # metrics endpoint
    depends_on:
      - jaeger
    # logging: *logging

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.34.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./ops/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    ports:
      - "9090:9090"
    # logging: *logging
  loki:
    image: grafana/loki:latest
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    # networks:
    #   - app
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./ops/promtail/promtail.yml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    # networks:
    #   - app
